#!/bin/bash

CUR_DIR=`dirname $0`

function replaceToken {
   dir=""
   eval arg=\$$1
   path=`which $arg 2> /dev/null`
   if [[ $path == /* ]]; then
        dir="`dirname $path`/"
   fi
   sed -i.qmake-sdk_bak "s#\$($1)#$dir$arg#g" $2
   rm $2.qmake-sdk_bak
}

function upsearch () {
  slashes=${CUR_DIR//[^\/]/}
  directory="$CUR_DIR"
  for (( n=${#slashes}; n>0; --n ))
  do
    test -e "$directory/$1" && echo "$directory/$1" && return 0
    directory="$directory/.."
  done
}

#Source the environment
script=`upsearch environment-setup-%%%REAL_MULTIMACH_TARGET_SYS%%%`
if [ ! -f "$script" ]
then
    echo "Can't find environment-setup-%%%REAL_MULTIMACH_TARGET_SYS%%%";
    exit 1;
fi
. $script

#Execute qmake
qmake $*

if [ $? != 0 ]
then
    exit 1;
fi

#Filter commands which doesn't change the Makefiles
if [[ $@ == **-query** || $@ == **-set** || $@ == **-unset** ]]
then
    exit 0
fi

#Patch all the Makefiles
for i in $(find -type f -name Makefile -cmin 1 | grep -rl "Generated by qmake")
do
        replaceToken "OE_QMAKE_CFLAGS" $i
        replaceToken "OE_QMAKE_CXXFLAGS" $i
        replaceToken "OE_QMAKE_LDFLAGS" $i
        replaceToken "OE_QMAKE_CC" $i
        replaceToken "OE_QMAKE_CXX" $i
        replaceToken "OE_QMAKE_LINK" $i
        replaceToken "OE_QMAKE_AR" $i
        replaceToken "OE_QMAKE_LIBDIR_QT" $i
        replaceToken "OE_QMAKE_INCDIR_QT" $i
        replaceToken "OE_QMAKE_MOC" $i
        replaceToken "OE_QMAKE_UIC" $i
        replaceToken "OE_QMAKE_RCC" $i
        replaceToken "OE_QMAKE_QDBUSCPP2XML" $i
        replaceToken "OE_QMAKE_QDBUSXML2CPP" $i
        replaceToken "OE_QMAKE_QT_CONFIG" $i
done
